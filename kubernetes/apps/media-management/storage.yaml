apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config
  namespace: media
  labels:
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: media-management
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-apps
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config
  namespace: media
  labels:
    app.kubernetes.io/name: radarr
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: media-management
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-apps
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lidarr-config
  namespace: media
  labels:
    app.kubernetes.io/name: lidarr
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: media-management
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-apps
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bazarr-config
  namespace: media
  labels:
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: media-management
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-apps
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: readarr-config
  namespace: media
  labels:
    app.kubernetes.io/name: readarr
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: media-management
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-apps
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-storage
  namespace: media
  labels:
    app.kubernetes.io/name: media-storage
    app.kubernetes.io/component: shared
    app.kubernetes.io/part-of: media-management
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-apps
  resources:
    requests:
      storage: 10Ti