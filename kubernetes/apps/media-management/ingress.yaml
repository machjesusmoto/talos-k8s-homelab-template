apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  namespace: media
  labels:
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/part-of: media-management
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - sonarr.k8s.dttesting.com
    secretName: sonarr-tls
  rules:
  - host: sonarr.k8s.dttesting.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sonarr
            port:
              number: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr
  namespace: media
  labels:
    app.kubernetes.io/name: radarr
    app.kubernetes.io/part-of: media-management
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - radarr.k8s.dttesting.com
    secretName: radarr-tls
  rules:
  - host: radarr.k8s.dttesting.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lidarr
  namespace: media
  labels:
    app.kubernetes.io/name: lidarr
    app.kubernetes.io/part-of: media-management
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - lidarr.k8s.dttesting.com
    secretName: lidarr-tls
  rules:
  - host: lidarr.k8s.dttesting.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lidarr
            port:
              number: 8686
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bazarr
  namespace: media
  labels:
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/part-of: media-management
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - bazarr.k8s.dttesting.com
    secretName: bazarr-tls
  rules:
  - host: bazarr.k8s.dttesting.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bazarr
            port:
              number: 6767
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: readarr
  namespace: media
  labels:
    app.kubernetes.io/name: readarr
    app.kubernetes.io/part-of: media-management
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - readarr.k8s.dttesting.com
    secretName: readarr-tls
  rules:
  - host: readarr.k8s.dttesting.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: readarr
            port:
              number: 8787