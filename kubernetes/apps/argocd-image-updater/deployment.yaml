apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argocd-image-updater
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/component: image-updater
    app.kubernetes.io/part-of: homelab
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
        app.kubernetes.io/component: image-updater
        app.kubernetes.io/part-of: homelab
    spec:
      serviceAccountName: argocd-image-updater
      containers:
      - name: argocd-image-updater
        image: argoprojlabs/argocd-image-updater:v0.12.3
        command:
        - /usr/local/bin/argocd-image-updater
        - run
        env:
        - name: APPLICATIONS_API
          value: "argocd"
        - name: ARGOCD_NAMESPACE
          value: "argocd"
        - name: ARGOCD_SERVER_ADDR
          value: "argocd-server.argocd.svc.cluster.local:443"
        - name: ARGOCD_INSECURE
          value: "true"
        - name: ARGOCD_PLAINTEXT
          value: "false"
        - name: LOG_LEVEL
          value: "info"
        - name: INTERVAL
          value: "2m"
        - name: REGISTRIES_CONF_PATH
          value: "/app/config/registries.conf"
        - name: PORT
          value: "8080"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: ssh-config
          mountPath: /app/ssh
          readOnly: true
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: argocd-image-updater-config
      - name: ssh-config
        secret:
          secretName: argocd-image-updater-ssh-config
          optional: true
      nodeSelector:
        kubernetes.io/os: linux