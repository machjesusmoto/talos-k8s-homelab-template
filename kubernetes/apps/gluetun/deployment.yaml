apiVersion: apps/v1
kind: Deployment
metadata:
  name: gluetun
  namespace: gluetun
  labels:
    app.kubernetes.io/name: gluetun
    app.kubernetes.io/component: vpn
    app.kubernetes.io/part-of: homelab
spec:
  replicas: 1
  strategy:
    type: Recreate  # Important for VPN containers
  selector:
    matchLabels:
      app.kubernetes.io/name: gluetun
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gluetun
        app.kubernetes.io/component: vpn
        app.kubernetes.io/part-of: homelab
    spec:
      # Disable host networking to avoid routing loops
      hostNetwork: false
      dnsPolicy: ClusterFirst
      # Prefer worker nodes for host networking
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
      containers:
      - name: gluetun
        image: qmcgaw/gluetun:v3.38.0
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
          privileged: false
          readOnlyRootFilesystem: false
        envFrom:
        - configMapRef:
            name: gluetun-config
        - secretRef:
            name: gluetun-vpn-secret
        ports:
        - name: health
          containerPort: 9999
          protocol: TCP
        - name: shadowsocks
          containerPort: 8388
          protocol: TCP
        - name: http-proxy
          containerPort: 8888
          protocol: TCP
        volumeMounts:
        - name: tun-device
          mountPath: /dev/net/tun
        - name: gluetun-data
          mountPath: /gluetun
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        # Health checks disabled temporarily for debugging
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: health
        #   initialDelaySeconds: 30
        #   periodSeconds: 60
        #   timeoutSeconds: 10
        #   failureThreshold: 3
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: health
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
      volumes:
      - name: tun-device
        hostPath:
          path: /dev/net/tun
          type: CharDevice
      - name: gluetun-data
        persistentVolumeClaim:
          claimName: gluetun-data
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300